(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{346:function(t,s,e){"use strict";e.r(s);var a=e(0),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"平台不可知论"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#平台不可知论"}},[t._v("#")]),t._v(" 平台不可知论")]),t._v(" "),e("p",[t._v("Nest是一个与平台无关的框架。这意味着您可以开发可在不同类型的应用程序中使用的可重用逻辑部分。例如，大多数组件可以在不同的基础HTTP服务器框架（例如Express和Fastify）甚至跨不同类型的应用程序（例如HTTP服务器框架，具有不同传输层的微服务和Web套接字）之间重复使用而无需更改。。")]),t._v(" "),e("h2",{attrs:{id:"一次构建，随处使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一次构建，随处使用"}},[t._v("#")]),t._v(" 一次构建，随处使用")]),t._v(" "),e("p",[t._v("文档的“ 概述”部分主要显示使用HTTP服务器框架的编码技术（例如，提供REST API或提供MVC风格的服务器端渲染的应用程序的应用程序）。但是，所有这些构造块都可以在不同的传输层（微服务或Websocket）上使用。")]),t._v(" "),e("p",[t._v("此外，Nest带有专用的GraphQL模块。您可以通过提供REST API来将GraphQL用作API层。")]),t._v(" "),e("p",[t._v("此外，应用程序上下文功能有助于在Nest之上创建任何类型的Node.js应用程序-包括CRON作业和CLI应用程序。")]),t._v(" "),e("p",[t._v("Nest希望成为Node.js应用程序的完整平台，为您的应用程序带来更高级别的模块化和可重用性。一次构建，可在任何地方使用！")])])}),[],!1,null,null,null);s.default=r.exports}}]);