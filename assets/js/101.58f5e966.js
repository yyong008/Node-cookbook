(window.webpackJsonp=window.webpackJsonp||[]).push([[101],{231:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"工作空间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工作空间"}},[t._v("#")]),t._v(" 工作空间")]),t._v(" "),a("p",[t._v("Nest有两种组织代码的模式：")]),t._v(" "),a("p",[t._v("标准模式：用于构建具有自己的依赖关系和设置且无需针对共享模块进行优化或优化复杂构建的单个以项目为中心的应用程序。这是默认模式。\nmonorepo模式：此模式将代码工件视为轻量级monorepo的一部分，并且可能更适合开发人员团队和/或多项目环境。它使构建过程的各个部分自动化，以使其易于创建和组成模块化组件，促进代码重用，使集成测试更容易，使其易于共享项目范围内的工件（例如tslint规则和其他配置策略），并且易于使用。而不是像github子模块这样的替代品。Monorepo模式采用文件中表示的工作空间的概念nest-cli.json来协调Monorepo组件之间的关系。\n重要的是要注意，Nest的几乎所有功能都独立于您的代码组织模式。该选择的唯一影响是项目的组成方式以及生成构建工件的方式。从CLI到核心模块再到附加模块的所有其他功能在两种模式下均相同。")]),t._v(" "),a("p",[t._v("此外，您可以随时轻松地从标准模式切换到Monorepo模式，因此您可以延迟此决定，直到一种或另一种方法的好处变得更加明显为止。")]),t._v(" "),a("h2",{attrs:{id:"标准模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标准模式"}},[t._v("#")]),t._v(" 标准模式")]),t._v(" "),a("p",[t._v("运行时nest new，将使用内置原理图为您创建一个新项目。Nest会执行以下操作：")]),t._v(" "),a("p",[t._v("创建一个新文件夹，对应于name您提供的参数nest new\n用与最小基础级Nest应用程序相对应的默认文件填充该文件夹。您可以在typescript-starter存储库中检查这些文件。\n提供其他文件（例如）nest-cli.json，package.json并tsconfig.json配置并启用各种工具来编译，测试和服务您的应用程序。\n从那里，您可以修改启动程序文件，添加新组件，添加依赖项（例如npm install），并按照本文档其余部分的方法开发应用程序。")]),t._v(" "),a("h2",{attrs:{id:"monorepo模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#monorepo模式"}},[t._v("#")]),t._v(" Monorepo模式")]),t._v(" "),a("p",[t._v("要启用monorepo模式，请从标准模式结构开始，然后添加项目。一个项目可以是一个完整的应用程序（使用命令将其添加到工作区中nest generate app）或一个库（使用命令将其添加到工作区中nest generate library）。我们将在下面讨论这些特定类型的项目组件的详细信息。现在要注意的关键点是，将项目添加到现有的标准模式结构会将其转换为monorepo模式。让我们来看一个例子。")]),t._v(" "),a("p",[t._v("如果我们运行：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("nest new my-project\n")])])]),a("p",[t._v("我们已经构建了一个标准的模式结构，其文件夹结构如下所示：")]),t._v(" "),a("div",{staticClass:"language-tree extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("src\napp.controller.ts\napp.service.ts\napp.module.ts\nmain.ts\nnode_modules\nnest-cli.json\npackage.json\ntsconfig.json\ntslint.json\n")])])]),a("p",[t._v("我们可以将其转换为monorepo模式结构，如下所示：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" my-project\nnest generate app my-app\n")])])]),a("p",[t._v("此时，nest将现有结构转换为monorepo模式结构。这导致一些重要的变化。现在，文件夹结构如下所示：")]),t._v(" "),a("div",{staticClass:"language-tree extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("apps\nmy-app\nsrc\napp.controller.ts\napp.service.ts\napp.module.ts\nmain.ts\ntsconfig.app.json\nmy-project\nsrc\napp.controller.ts\napp.service.ts\napp.module.ts\nmain.ts\ntsconfig.app.json\nnest-cli.json\npackage.json\ntsconfig.json\ntslint.json\n")])])]),a("p",[t._v("该generate app示意图已重组的代码-移动每个应用程序的项目下的apps文件夹，并添加特定项目tsconfig.app.json中的每个项目的根文件夹中的文件。我们原来的my-project应用程序已成为monorepo 的默认项目，并且现在与my-app该apps文件夹位于文件夹中的刚刚添加的peer对等。我们将在下面介绍默认项目。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("警告\n标准模式结构到Monorepo的转换仅适用于遵循标准Nest项目结构的项目。具体来说，在转换期间，原理图尝试将srcand test文件夹重新apps放置在根文件夹下的项目文件夹中。如果项目不使用此结构，则转换将失败或产生不可靠的结果。")])]),t._v(" "),a("h2",{attrs:{id:"工作区项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工作区项目"}},[t._v("#")]),t._v(" 工作区项目")]),t._v(" "),a("p",[t._v("单体仓库使用工作区的概念来管理其成员实体。工作区由项目组成。一个项目可能是：")]),t._v(" "),a("p",[t._v('一个应用程序：一个完整​​的Nest应用程序，其中包含main.ts用于引导该应用程序的文件。除了编译和构建方面的考虑外，工作空间中的应用程序类型项目在功能上与标准模式结构中的应用程序相同。\n一个库：库是封装的通用集合的功能，可以其他项目中使用（模块，提供者，控制器等）的方式。库不能单独运行，也没有main.ts文件。在此处阅读有关库的更多信息。\n所有工作区都有一个默认项目（应该是应用程序类型的项目）。这由文件中的顶级"root"属性定义，该属性nest-cli.json指向默认项目的根目录（有关更多详细信息，请参见下面的CLI属性）。通常，这是您最初使用的标准模式应用程序，后来使用转换为monorepo nest generate app。当您按照下列步骤操作时，将自动填充此属性。')]),t._v(" "),a("p",[t._v("当没有提供项目名称时，nest命令会使用默认项目，例如nest build和nest start。")]),t._v(" "),a("p",[t._v("例如，在上面的monorepo结构中，运行")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ nest start\n")])])]),a("p",[t._v("将启动该my-project应用程序。首先my-app，我们将使用:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ nest start my-app\n")])])]),a("h2",{attrs:{id:"应用领域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#应用领域"}},[t._v("#")]),t._v(" 应用领域")]),t._v(" "),a("p",[t._v("应用程序类型的项目，或者我们可能非正式地称为“应用程序”的项目，是可以运行和部署的完整Nest应用程序。您使用生成一个应用程序类型的项目nest generate app。")]),t._v(" "),a("p",[t._v("此命令自动生成项目框架，包括来自打字稿启动器的标准src和test文件夹。与标准模式不同，monorepo中的应用程序项目不具有任何程序包依赖项（）或其他项目配置工件，如和。而是使用monorepo范围内的依赖项和配置文件。package.json.prettierrctslint.json")]),t._v(" "),a("p",[t._v("但是，原理图确实会在项目tsconfig.app.json的根文件夹中生成特定于项目的文件。此配置文件会自动设置适当的构建选项，包括正确设置编译输出文件夹。该文件扩展了顶层（monorepo）tsconfig.json文件，因此您可以在单仓库范围内管理全局设置，但是在项目级别需要时可以覆盖它们。")]),t._v(" "),a("h2",{attrs:{id:"图书馆"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图书馆"}},[t._v("#")]),t._v(" 图书馆")]),t._v(" "),a("p",[t._v("如前所述，库类型项目（或简称为“库”）是Nest组件的程序包，需要将它们组成应用程序才能运行。您使用生成一个库类型的项目nest generate library。决定图书馆中的物品是建筑设计的决定。我们将在“ 库”一章中深入讨论库。")]),t._v(" "),a("h2",{attrs:{id:"cli属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cli属性"}},[t._v("#")]),t._v(" CLI属性")]),t._v(" "),a("p",[t._v("Nest将nest-cli.json文件，标准和Monorepo结构项目的组织，构建和部署所需的元数据保留在文件中。当您添加项目时，Nest会自动添加并更新此文件，因此通常不必考虑它或编辑其内容。但是，您可能需要手动更改一些设置，因此对文件进行概述很有帮助。")]),t._v(" "),a("p",[t._v("运行上述步骤以创建monorepo后，我们的nest-cli.json文件如下所示：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"collection"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@nestjs/schematics"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sourceRoot"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"apps/my-project/src"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"monorepo"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"root"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"apps/my-project"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"compilerOptions"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"webpack"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"tsConfigPath"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"apps/my-project/tsconfig.app.json"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"projects"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"my-project"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"application"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"root"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"apps/my-project"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"entryFile"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"main"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sourceRoot"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"apps/my-project/src"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"compilerOptions"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"tsConfigPath"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"apps/my-project/tsconfig.app.json"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"my-app"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"application"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"root"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"apps/my-app"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"entryFile"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"main"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sourceRoot"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"apps/my-app/src"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"compilerOptions"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"tsConfigPath"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"apps/my-app/tsconfig.app.json"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("该文件分为几部分：")]),t._v(" "),a("p",[t._v('具有顶级属性的全局部分，用于控制标准和单仓库范围的设置\n"projects"带有每个项目的元数据的顶级属性（）。本部分仅适用于单存储模式结构。\n顶级属性如下：')]),t._v(" "),a("p",[t._v('"collection"：指向用于生成组件的原理图集合；您通常不应更改此值\n"sourceRoot"：在标准模式结构中指向单个项目的源代码的根，在monorepo模式结构中指向默认项目的源\n"compilerOptions"：一个映射，其中的键指定编译器选项，而值指定选项设置；请参阅下面的详细信息\n"generateOptions"：一个映射，其中的键指定全局生成选项，值指定选项设置；请参阅下面的详细信息\n"monorepo":（仅用于monorepo）对于monorepo模式结构，此值始终为 true\n"root"：（仅适用于monorepo）指向默认项目的项目根目录')]),t._v(" "),a("h2",{attrs:{id:"全局编译器选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局编译器选项"}},[t._v("#")]),t._v(" 全局编译器选项")]),t._v(" "),a("p",[t._v("这些属性指定要使用的编译器，以及影响的各种选项任何编译步骤，无论是作为的一部分nest build或nest start，也不管编译器，无论是tsc或的WebPack。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("物业名称")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("属性值类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("webpack")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("布尔值")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("如果是true，请使用webpack编译器。如果false不存在，请使用tsc。在monorepo模式下，默认值为true（使用webpack），在标准模式下，默认值为false（use tsc）。有关详情，请参见下文。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("tsconfigPath")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("字符串")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("（仅适用于monorepo）指向包含tsconfig.json设置的文件，该设置将在不带选项的情况下调用nest build或使用（例如，在构建或启动默认项目时）。nest startproject")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("webpackConfigPath")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("字符串")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("指向webpack选项文件。如果未指定，则Nest查找文件webpack.config.js。请参阅下面的更多细节。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("deleteOutDir")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("布尔值")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("如果为true，则每当调用编译器时，它将首先删除编译输出目录（如中的配置tsconfig.json，默认为./dist）。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("assets")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("数组")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("每当编译步骤开始启用自动分发非打字稿资产（资产分配不不增量编译中发生的--watch模式）。有关详情，请参见下文。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("watchAssets")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("布尔值")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("如果为true，则以监视模式运行，监视所有非TypeScript资产。（有关要监视的资产的更细粒度控制，请参阅下面的“ 资产”部分）。")])])])]),t._v(" "),a("h2",{attrs:{id:"全局生成选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局生成选项"}},[t._v("#")]),t._v(" 全局生成选项")]),t._v(" "),a("p",[t._v("这些属性指定nest generate命令使用的默认生成选项。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("物业名称")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("属性值类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("spec")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("布尔值或对象")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("如果值为boolean，则默认情况下，值为enable会true启用spec生成，而值为false禁用会禁用它。在CLI命令行上传递的标志将覆盖此设置，特定于项目的generateOptions设置也将覆盖该设置（下文中有更多内容）。如果值是一个对象，则每个键都代表一个逻辑示意图名称，并且布尔值确定是否为该特定逻辑示意图启用/禁用了默认规范生成。")])])])]),t._v(" "),a("p",[t._v("以下示例使用布尔值指定默认情况下应为所有项目禁用规格文件生成：")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"generateOptions"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"spec"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("在以下示例中，spec仅对service原理图（例如nest generate service...）禁用了文件生成：")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"generateOptions"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"spec"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"service"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("警告\n当指定spec为对象时，生成原理图的键当前不支持自动别名处理。这意味着，例如指定一个密钥service: false并尝试通过别名生成服务s，仍然会生成规范。为了确保正常的逻辑示意图名称和别名均能按预期工作，请同时指定正常的命令名称和别名，如下所示。")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"generateOptions"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"spec"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"service"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"s"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  ...\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("h2",{attrs:{id:"特定于项目的生成选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特定于项目的生成选项"}},[t._v("#")]),t._v(" 特定于项目的生成选项")]),t._v(" "),a("p",[t._v("除了提供全局生成选项之外，您还可以指定特定于项目的生成选项。项目特定的生成选项遵循与全局生成选项完全相同的格式，但是直接在每个项目上指定。")]),t._v(" "),a("p",[t._v("特定于项目的生成选项将覆盖全局生成选项。")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"projects"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"cats-project"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"generateOptions"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"spec"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"service"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      ...\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  ...\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("注意\n生成选项的优先顺序如下。CLI命令行上指定的选项优先于特定于项目的选项。项目特定的选项将覆盖全局选项。")])]),t._v(" "),a("h2",{attrs:{id:"指定的编译器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指定的编译器"}},[t._v("#")]),t._v(" 指定的编译器")]),t._v(" "),a("p",[t._v('使用不同默认编译器的原因是，对于大型项目（例如，在monorepo中更为典型），webpack在构建时间以及生成将所有项目组件捆绑在一起的单个文件方面具有明显的优势。如果您希望生成单个文件，请将其设置"webpack"为false，这将导致使用构建过程tsc。')]),t._v(" "),a("h2",{attrs:{id:"webpack选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack选项"}},[t._v("#")]),t._v(" Webpack选项")]),t._v(" "),a("p",[t._v("webpack选项文件可以包含标准的webpack配置选项。例如，要告诉webpack捆绑node_modules（默认情况下不包括），请将以下内容添加到中webpack.config.js：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  externals"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("由于webpack配置文件是一个JavaScript文件，因此您甚至可以公开一个采用默认选项并返回修改后的对象的函数：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("exports")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("options")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    externals"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"资产"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#资产"}},[t._v("#")]),t._v(" 资产")]),t._v(" "),a("p",[t._v("TypeScript编译自动将编译器输出（.js和.d.ts文件）分发到指定的输出目录。分发非TypeScript文件（例如.graphql文件images，.html文件和其他资产）也很方便。这使您可以将nest build（以及任何初始编译步骤）视为轻量级开发构建步骤，在此步骤中，您可能正在编辑非TypeScript文件并进行迭代编译和测试。")]),t._v(" "),a("p",[t._v("assets密钥的值应该是一个元素数组，该元素数组指定要分发的文件。元素可以是带有glob-like文件规范的简单字符串，例如：")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"assets"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"**/*.graphql"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"watchAssets"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),a("p",[t._v("为了更好地控制，这些元素可以是具有以下键的对象：")]),t._v(" "),a("p",[t._v('"include"：glob-类似要分配资产的文件规范\n"exclude"：glob-类似资产的文件规范，将从列表中排除include\n"outDir"：一个字符串，它指定资产应分配到的路径（相对于根文件夹）。默认为为编译器输出配置的相同输出目录。\n"watchAssets"：布尔值; 如果true，以监视模式运行以监视指定资产\n例如')]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"assets"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"include"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"**/*.graphql"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"exclude"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"**/omitted.graphql"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"watchAssets"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("警告\n设置watchAssets在顶层compilerOptions属性将覆盖任何watchAssets的内部设置assets属性。")])]),t._v(" "),a("h2",{attrs:{id:"项目性质"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#项目性质"}},[t._v("#")]),t._v(" 项目性质")]),t._v(" "),a("p",[t._v("此元素仅对于单回购模式结构存在。通常，您不应编辑这些属性，因为Nest会使用这些属性在monorepo中定位项目及其配置选项。")])])}),[],!1,null,null,null);s.default=e.exports}}]);